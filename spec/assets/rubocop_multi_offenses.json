{
  "metadata": {
    "rubocop_version": "0.49.1",
    "ruby_engine": "ruby",
    "ruby_version": "2.5.1",
    "ruby_patchlevel": "57",
    "ruby_platform": "x86_64-darwin18"
  },
  "files": [
    {
      "path": "lib/danger/ci_source/code_build.rb",
      "offenses": [
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Keep a blank line before and after `private`.",
          "cop_name": "Layout/EmptyLinesAroundAccessModifier",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 5,
            "length": 7
          }
        },
        {
          "severity": "warning",
          "message": "Useless `private` access modifier.",
          "cop_name": "Lint/UselessAccessModifier",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 5,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Layout/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 34,
            "column": 7,
            "length": 189
          }
        },
        {
          "severity": "warning",
          "message": "`private` (on line 33) does not make singleton methods private. Use `private_class_method` or `private` inside a `class << self` block instead.",
          "cop_name": "Lint/IneffectiveAccessModifier",
          "corrected": false,
          "location": {
            "line": 34,
            "column": 7,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use `%r` around regular expression.",
          "cop_name": "Style/RegexpLiteral",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 47,
            "length": 30
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Layout/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 7,
            "length": 164
          }
        },
        {
          "severity": "warning",
          "message": "`private` (on line 33) does not make singleton methods private. Use `private_class_method` or `private` inside a `class << self` block instead.",
          "cop_name": "Lint/IneffectiveAccessModifier",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 7,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Layout/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 46,
            "column": 7,
            "length": 449
          }
        },
        {
          "severity": "warning",
          "message": "`private` (on line 33) does not make singleton methods private. Use `private_class_method` or `private` inside a `class << self` block instead.",
          "cop_name": "Lint/IneffectiveAccessModifier",
          "corrected": false,
          "location": {
            "line": 46,
            "column": 7,
            "length": 3
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `source_origin`. Use `_` or `_source_origin` as a variable name to indicate that it won't be used.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": false,
          "location": {
            "line": 51,
            "column": 9,
            "length": 13
          }
        }
      ]
    }
  ],
  "summary": {
    "offense_count": 11,
    "target_file_count": 1,
    "inspected_file_count": 1
  }
}