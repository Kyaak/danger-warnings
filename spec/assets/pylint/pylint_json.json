[
    {
        "message": "Final newline missing", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/__init__.py", 
        "line": 1, 
        "message-id": "C0304", 
        "type": "convention", 
        "symbol": "missing-final-newline", 
        "module": "test_project"
    }, 
    {
        "message": "Missing module docstring", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/__init__.py", 
        "line": 1, 
        "message-id": "C0111", 
        "type": "convention", 
        "symbol": "missing-docstring", 
        "module": "test_project"
    }, 
    {
        "message": "Wildcard import test_project", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/__init__.py", 
        "line": 1, 
        "message-id": "W0401", 
        "type": "warning", 
        "symbol": "wildcard-import", 
        "module": "test_project"
    }, 
    {
        "message": "Relative import 'test_project', should be 'test_project.test_project'", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/__init__.py", 
        "line": 1, 
        "message-id": "W0403", 
        "type": "warning", 
        "symbol": "relative-import", 
        "module": "test_project"
    }, 
    {
        "message": "Final newline missing", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/Singleton.py", 
        "line": 37, 
        "message-id": "C0304", 
        "type": "convention", 
        "symbol": "missing-final-newline", 
        "module": "test_project.Singleton"
    }, 
    {
        "message": "Module name \"Singleton\" doesn't conform to snake_case naming style", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/Singleton.py", 
        "line": 1, 
        "message-id": "C0103", 
        "type": "convention", 
        "symbol": "invalid-name", 
        "module": "test_project.Singleton"
    }, 
    {
        "message": "Missing module docstring", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/Singleton.py", 
        "line": 1, 
        "message-id": "C0111", 
        "type": "convention", 
        "symbol": "missing-docstring", 
        "module": "test_project.Singleton"
    }, 
    {
        "message": "Old-style class defined.", 
        "obj": "Singleton", 
        "column": 0, 
        "path": "test_project/Singleton.py", 
        "line": 1, 
        "message-id": "C1001", 
        "type": "convention", 
        "symbol": "old-style-class", 
        "module": "test_project.Singleton"
    }, 
    {
        "message": "Method name \"Instance\" doesn't conform to snake_case naming style", 
        "obj": "Singleton.Instance", 
        "column": 4, 
        "path": "test_project/Singleton.py", 
        "line": 20, 
        "message-id": "C0103", 
        "type": "convention", 
        "symbol": "invalid-name", 
        "module": "test_project.Singleton"
    }, 
    {
        "message": "Attribute '_instance' defined outside __init__", 
        "obj": "Singleton.Instance", 
        "column": 12, 
        "path": "test_project/Singleton.py", 
        "line": 30, 
        "message-id": "W0201", 
        "type": "warning", 
        "symbol": "attribute-defined-outside-init", 
        "module": "test_project.Singleton"
    }, 
    {
        "message": "Trailing whitespace", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 14, 
        "message-id": "C0303", 
        "type": "convention", 
        "symbol": "trailing-whitespace", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Trailing whitespace", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 25, 
        "message-id": "C0303", 
        "type": "convention", 
        "symbol": "trailing-whitespace", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Exactly one space required after assignment\n        worker =Thread (target=self.monitorQueue, args=(self.queue,))\n               ^", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 28, 
        "message-id": "C0326", 
        "type": "convention", 
        "symbol": "bad-whitespace", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "No space allowed before bracket\n        worker =Thread (target=self.monitorQueue, args=(self.queue,))\n                       ^", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 28, 
        "message-id": "C0326", 
        "type": "convention", 
        "symbol": "bad-whitespace", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Trailing whitespace", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 39, 
        "message-id": "C0303", 
        "type": "convention", 
        "symbol": "trailing-whitespace", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Trailing whitespace", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 43, 
        "message-id": "C0303", 
        "type": "convention", 
        "symbol": "trailing-whitespace", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Trailing whitespace", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 50, 
        "message-id": "C0303", 
        "type": "convention", 
        "symbol": "trailing-whitespace", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Line too long (113/100)", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 54, 
        "message-id": "C0301", 
        "type": "convention", 
        "symbol": "line-too-long", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Exactly one space required after comma\n                if inMode == 4: PyBusThread(randint(1,100), threadName, 1, method, withEvent, subscriber).start()\n                                                     ^", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 54, 
        "message-id": "C0326", 
        "type": "convention", 
        "symbol": "bad-whitespace", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Line too long (131/100)", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 55, 
        "message-id": "C0301", 
        "type": "convention", 
        "symbol": "line-too-long", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Exactly one space required after comma\n                elif inMode == 1: self.queue.put(PyBusThread(randint(1,100), threadName, 1, method, withEvent, subscriber).start())\n                                                                      ^", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 55, 
        "message-id": "C0326", 
        "type": "convention", 
        "symbol": "bad-whitespace", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Line too long (111/100)", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 56, 
        "message-id": "C0301", 
        "type": "convention", 
        "symbol": "line-too-long", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Trailing whitespace", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 57, 
        "message-id": "C0303", 
        "type": "convention", 
        "symbol": "trailing-whitespace", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Line too long (106/100)", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 59, 
        "message-id": "C0301", 
        "type": "convention", 
        "symbol": "line-too-long", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Line too long (165/100)", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 66, 
        "message-id": "C0301", 
        "type": "convention", 
        "symbol": "line-too-long", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Line too long (125/100)", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 68, 
        "message-id": "C0301", 
        "type": "convention", 
        "symbol": "line-too-long", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Trailing whitespace", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 74, 
        "message-id": "C0303", 
        "type": "convention", 
        "symbol": "trailing-whitespace", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Trailing whitespace", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 81, 
        "message-id": "C0303", 
        "type": "convention", 
        "symbol": "trailing-whitespace", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Trailing whitespace", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 82, 
        "message-id": "C0303", 
        "type": "convention", 
        "symbol": "trailing-whitespace", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Trailing whitespace", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 83, 
        "message-id": "C0303", 
        "type": "convention", 
        "symbol": "trailing-whitespace", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Trailing whitespace", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 91, 
        "message-id": "C0303", 
        "type": "convention", 
        "symbol": "trailing-whitespace", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Bad indentation. Found 8 spaces, expected 4", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 91, 
        "message-id": "W0311", 
        "type": "warning", 
        "symbol": "bad-indentation", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Trailing whitespace", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 92, 
        "message-id": "C0303", 
        "type": "convention", 
        "symbol": "trailing-whitespace", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Bad indentation. Found 8 spaces, expected 4", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 92, 
        "message-id": "W0311", 
        "type": "warning", 
        "symbol": "bad-indentation", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Bad indentation. Found 8 spaces, expected 4", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 93, 
        "message-id": "W0311", 
        "type": "warning", 
        "symbol": "bad-indentation", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Trailing whitespace", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 94, 
        "message-id": "C0303", 
        "type": "convention", 
        "symbol": "trailing-whitespace", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Bad indentation. Found 8 spaces, expected 4", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 94, 
        "message-id": "W0311", 
        "type": "warning", 
        "symbol": "bad-indentation", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Bad indentation. Found 8 spaces, expected 4", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 95, 
        "message-id": "W0311", 
        "type": "warning", 
        "symbol": "bad-indentation", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Bad indentation. Found 8 spaces, expected 4", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 97, 
        "message-id": "W0311", 
        "type": "warning", 
        "symbol": "bad-indentation", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Bad indentation. Found 12 spaces, expected 8", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 98, 
        "message-id": "W0311", 
        "type": "warning", 
        "symbol": "bad-indentation", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "No space allowed before bracket\nclass PyBusThread (threading.Thread):\n                  ^", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 101, 
        "message-id": "C0326", 
        "type": "convention", 
        "symbol": "bad-whitespace", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Bad indentation. Found 7 spaces, expected 8", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 103, 
        "message-id": "W0311", 
        "type": "warning", 
        "symbol": "bad-indentation", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Bad indentation. Found 7 spaces, expected 8", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 104, 
        "message-id": "W0311", 
        "type": "warning", 
        "symbol": "bad-indentation", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Bad indentation. Found 7 spaces, expected 8", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 105, 
        "message-id": "W0311", 
        "type": "warning", 
        "symbol": "bad-indentation", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Bad indentation. Found 7 spaces, expected 8", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 106, 
        "message-id": "W0311", 
        "type": "warning", 
        "symbol": "bad-indentation", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Bad indentation. Found 7 spaces, expected 8", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 107, 
        "message-id": "W0311", 
        "type": "warning", 
        "symbol": "bad-indentation", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Bad indentation. Found 7 spaces, expected 8", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 108, 
        "message-id": "W0311", 
        "type": "warning", 
        "symbol": "bad-indentation", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Bad indentation. Found 7 spaces, expected 8", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 109, 
        "message-id": "W0311", 
        "type": "warning", 
        "symbol": "bad-indentation", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "No space allowed around keyword argument assignment\ndef subscribe(threadMode = Mode.POSTING, onEvent = None):\n                         ^", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 115, 
        "message-id": "C0326", 
        "type": "convention", 
        "symbol": "bad-whitespace", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "No space allowed around keyword argument assignment\ndef subscribe(threadMode = Mode.POSTING, onEvent = None):\n                                                 ^", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 115, 
        "message-id": "C0326", 
        "type": "convention", 
        "symbol": "bad-whitespace", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Trailing whitespace", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 120, 
        "message-id": "C0303", 
        "type": "convention", 
        "symbol": "trailing-whitespace", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Trailing newlines", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 123, 
        "message-id": "C0305", 
        "type": "convention", 
        "symbol": "trailing-newlines", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Missing module docstring", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 1, 
        "message-id": "C0111", 
        "type": "convention", 
        "symbol": "missing-docstring", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Wildcard import Singleton", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 1, 
        "message-id": "W0401", 
        "type": "warning", 
        "symbol": "wildcard-import", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Relative import 'Singleton', should be 'test_project.Singleton'", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 1, 
        "message-id": "W0403", 
        "type": "warning", 
        "symbol": "relative-import", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Multiple imports on one line (time, sys)", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 4, 
        "message-id": "C0410", 
        "type": "convention", 
        "symbol": "multiple-imports", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Multiple imports on one line (gevent, os)", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 9, 
        "message-id": "C0410", 
        "type": "convention", 
        "symbol": "multiple-imports", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Unable to import 'gevent'", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 9, 
        "message-id": "E0401", 
        "type": "error", 
        "symbol": "import-error", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Constant name \"exitFlag\" doesn't conform to UPPER_CASE naming style", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 10, 
        "message-id": "C0103", 
        "type": "convention", 
        "symbol": "invalid-name", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Missing class docstring", 
        "obj": "PyBus", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 12, 
        "message-id": "C0111", 
        "type": "convention", 
        "symbol": "missing-docstring", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Old-style class defined.", 
        "obj": "PyBus", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 12, 
        "message-id": "C1001", 
        "type": "convention", 
        "symbol": "old-style-class", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Lambda may not be necessary", 
        "obj": "PyBus.__init__.<lambda>", 
        "column": 23, 
        "path": "test_project/test_project.py", 
        "line": 24, 
        "message-id": "W0108", 
        "type": "warning", 
        "symbol": "unnecessary-lambda", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "More than one statement on a single line", 
        "obj": "PyBus.__init__", 
        "column": 86, 
        "path": "test_project/test_project.py", 
        "line": 24, 
        "message-id": "C0321", 
        "type": "convention", 
        "symbol": "multiple-statements", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Unused variable 'i'", 
        "obj": "PyBus.__init__", 
        "column": 55, 
        "path": "test_project/test_project.py", 
        "line": 24, 
        "message-id": "W0612", 
        "type": "warning", 
        "symbol": "unused-variable", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Method name \"startWorkers\" doesn't conform to snake_case naming style", 
        "obj": "PyBus.startWorkers", 
        "column": 4, 
        "path": "test_project/test_project.py", 
        "line": 27, 
        "message-id": "C0103", 
        "type": "convention", 
        "symbol": "invalid-name", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Missing method docstring", 
        "obj": "PyBus.startWorkers", 
        "column": 4, 
        "path": "test_project/test_project.py", 
        "line": 27, 
        "message-id": "C0111", 
        "type": "convention", 
        "symbol": "missing-docstring", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Method name \"monitorQueue\" doesn't conform to snake_case naming style", 
        "obj": "PyBus.monitorQueue", 
        "column": 4, 
        "path": "test_project/test_project.py", 
        "line": 32, 
        "message-id": "C0103", 
        "type": "convention", 
        "symbol": "invalid-name", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Argument name \"q\" doesn't conform to snake_case naming style", 
        "obj": "PyBus.monitorQueue", 
        "column": 4, 
        "path": "test_project/test_project.py", 
        "line": 32, 
        "message-id": "C0103", 
        "type": "convention", 
        "symbol": "invalid-name", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Missing method docstring", 
        "obj": "PyBus.monitorQueue", 
        "column": 4, 
        "path": "test_project/test_project.py", 
        "line": 32, 
        "message-id": "C0111", 
        "type": "convention", 
        "symbol": "missing-docstring", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Method could be a function", 
        "obj": "PyBus.monitorQueue", 
        "column": 4, 
        "path": "test_project/test_project.py", 
        "line": 32, 
        "message-id": "R0201", 
        "type": "refactor", 
        "symbol": "no-self-use", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Missing method docstring", 
        "obj": "PyBus.register", 
        "column": 4, 
        "path": "test_project/test_project.py", 
        "line": 37, 
        "message-id": "C0111", 
        "type": "convention", 
        "symbol": "missing-docstring", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Missing method docstring", 
        "obj": "PyBus.post", 
        "column": 4, 
        "path": "test_project/test_project.py", 
        "line": 40, 
        "message-id": "C0111", 
        "type": "convention", 
        "symbol": "missing-docstring", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Method name \"DoesSubscribersContainThisMethod\" doesn't conform to snake_case naming style", 
        "obj": "PyBus.DoesSubscribersContainThisMethod", 
        "column": 4, 
        "path": "test_project/test_project.py", 
        "line": 44, 
        "message-id": "C0103", 
        "type": "convention", 
        "symbol": "invalid-name", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Missing method docstring", 
        "obj": "PyBus.DoesSubscribersContainThisMethod", 
        "column": 4, 
        "path": "test_project/test_project.py", 
        "line": 44, 
        "message-id": "C0111", 
        "type": "convention", 
        "symbol": "missing-docstring", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Method could be a function", 
        "obj": "PyBus.DoesSubscribersContainThisMethod", 
        "column": 4, 
        "path": "test_project/test_project.py", 
        "line": 44, 
        "message-id": "R0201", 
        "type": "refactor", 
        "symbol": "no-self-use", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Argument name \"withEvent\" doesn't conform to snake_case naming style", 
        "obj": "PyBus.call", 
        "column": 4, 
        "path": "test_project/test_project.py", 
        "line": 48, 
        "message-id": "C0103", 
        "type": "convention", 
        "symbol": "invalid-name", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Argument name \"inMode\" doesn't conform to snake_case naming style", 
        "obj": "PyBus.call", 
        "column": 4, 
        "path": "test_project/test_project.py", 
        "line": 48, 
        "message-id": "C0103", 
        "type": "convention", 
        "symbol": "invalid-name", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Missing method docstring", 
        "obj": "PyBus.call", 
        "column": 4, 
        "path": "test_project/test_project.py", 
        "line": 48, 
        "message-id": "C0111", 
        "type": "convention", 
        "symbol": "missing-docstring", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "More than one statement on a single line", 
        "obj": "PyBus.call", 
        "column": 24, 
        "path": "test_project/test_project.py", 
        "line": 50, 
        "message-id": "C0321", 
        "type": "convention", 
        "symbol": "multiple-statements", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Variable name \"threadName\" doesn't conform to snake_case naming style", 
        "obj": "PyBus.call", 
        "column": 16, 
        "path": "test_project/test_project.py", 
        "line": 53, 
        "message-id": "C0103", 
        "type": "convention", 
        "symbol": "invalid-name", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "More than one statement on a single line", 
        "obj": "PyBus.call", 
        "column": 32, 
        "path": "test_project/test_project.py", 
        "line": 54, 
        "message-id": "C0321", 
        "type": "convention", 
        "symbol": "multiple-statements", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "More than one statement on a single line", 
        "obj": "PyBus.call", 
        "column": 34, 
        "path": "test_project/test_project.py", 
        "line": 55, 
        "message-id": "C0321", 
        "type": "convention", 
        "symbol": "multiple-statements", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "More than one statement on a single line", 
        "obj": "PyBus.call", 
        "column": 34, 
        "path": "test_project/test_project.py", 
        "line": 56, 
        "message-id": "C0321", 
        "type": "convention", 
        "symbol": "multiple-statements", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "More than one statement on a single line", 
        "obj": "PyBus.call", 
        "column": 34, 
        "path": "test_project/test_project.py", 
        "line": 57, 
        "message-id": "C0321", 
        "type": "convention", 
        "symbol": "multiple-statements", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Missing method docstring", 
        "obj": "PyBus.execute", 
        "column": 4, 
        "path": "test_project/test_project.py", 
        "line": 61, 
        "message-id": "C0111", 
        "type": "convention", 
        "symbol": "missing-docstring", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Variable name \"subscribersContainingThisMethod\" doesn't conform to snake_case naming style", 
        "obj": "PyBus.execute", 
        "column": 20, 
        "path": "test_project/test_project.py", 
        "line": 66, 
        "message-id": "C0103", 
        "type": "convention", 
        "symbol": "invalid-name", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "map/filter on lambda could be replaced by comprehension", 
        "obj": "PyBus.execute", 
        "column": 54, 
        "path": "test_project/test_project.py", 
        "line": 66, 
        "message-id": "W0110", 
        "type": "warning", 
        "symbol": "deprecated-lambda", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Cell variable method defined in loop", 
        "obj": "PyBus.execute.<lambda>", 
        "column": 118, 
        "path": "test_project/test_project.py", 
        "line": 66, 
        "message-id": "W0640", 
        "type": "warning", 
        "symbol": "cell-var-from-loop", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Method name \"addEventsWithMethods\" doesn't conform to snake_case naming style", 
        "obj": "PyBus.addEventsWithMethods", 
        "column": 4, 
        "path": "test_project/test_project.py", 
        "line": 72, 
        "message-id": "C0103", 
        "type": "convention", 
        "symbol": "invalid-name", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Argument name \"threadMode\" doesn't conform to snake_case naming style", 
        "obj": "PyBus.addEventsWithMethods", 
        "column": 4, 
        "path": "test_project/test_project.py", 
        "line": 72, 
        "message-id": "C0103", 
        "type": "convention", 
        "symbol": "invalid-name", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Missing method docstring", 
        "obj": "PyBus.addEventsWithMethods", 
        "column": 4, 
        "path": "test_project/test_project.py", 
        "line": 72, 
        "message-id": "C0111", 
        "type": "convention", 
        "symbol": "missing-docstring", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Variable name \"subscribedMethodsForEvent\" doesn't conform to snake_case naming style", 
        "obj": "PyBus.addEventsWithMethods", 
        "column": 12, 
        "path": "test_project/test_project.py", 
        "line": 75, 
        "message-id": "C0103", 
        "type": "convention", 
        "symbol": "invalid-name", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Redefining argument with the local name 'method'", 
        "obj": "PyBus.addEventsWithMethods", 
        "column": 16, 
        "path": "test_project/test_project.py", 
        "line": 77, 
        "message-id": "R1704", 
        "type": "refactor", 
        "symbol": "redefined-argument-from-local", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Missing class docstring", 
        "obj": "Mode", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 90, 
        "message-id": "C0111", 
        "type": "convention", 
        "symbol": "missing-docstring", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Old-style class defined.", 
        "obj": "Mode", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 90, 
        "message-id": "C1001", 
        "type": "convention", 
        "symbol": "old-style-class", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Too few public methods (0/2)", 
        "obj": "Mode", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 90, 
        "message-id": "R0903", 
        "type": "refactor", 
        "symbol": "too-few-public-methods", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Attribute name \"threadID\" doesn't conform to snake_case naming style", 
        "obj": "PyBusThread.__init__", 
        "column": 7, 
        "path": "test_project/test_project.py", 
        "line": 104, 
        "message-id": "C0103", 
        "type": "convention", 
        "symbol": "invalid-name", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Missing class docstring", 
        "obj": "PyBusThread", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 101, 
        "message-id": "C0111", 
        "type": "convention", 
        "symbol": "missing-docstring", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Too many arguments (7/5)", 
        "obj": "PyBusThread.__init__", 
        "column": 4, 
        "path": "test_project/test_project.py", 
        "line": 102, 
        "message-id": "R0913", 
        "type": "refactor", 
        "symbol": "too-many-arguments", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Import \"from test_project import Mode\" should be placed at the top of the module", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 114, 
        "message-id": "C0413", 
        "type": "convention", 
        "symbol": "wrong-import-position", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Module import itself", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 114, 
        "message-id": "W0406", 
        "type": "warning", 
        "symbol": "import-self", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Argument name \"threadMode\" doesn't conform to snake_case naming style", 
        "obj": "subscribe", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 115, 
        "message-id": "C0103", 
        "type": "convention", 
        "symbol": "invalid-name", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Argument name \"onEvent\" doesn't conform to snake_case naming style", 
        "obj": "subscribe", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 115, 
        "message-id": "C0103", 
        "type": "convention", 
        "symbol": "invalid-name", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Missing function docstring", 
        "obj": "subscribe", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 115, 
        "message-id": "C0111", 
        "type": "convention", 
        "symbol": "missing-docstring", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Class 'PyBus' has no 'Instance' member", 
        "obj": "subscribe", 
        "column": 10, 
        "path": "test_project/test_project.py", 
        "line": 116, 
        "message-id": "E1101", 
        "type": "error", 
        "symbol": "no-member", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Missing function docstring", 
        "obj": "subscribe.real_decorator", 
        "column": 4, 
        "path": "test_project/test_project.py", 
        "line": 117, 
        "message-id": "C0111", 
        "type": "convention", 
        "symbol": "missing-docstring", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Missing function docstring", 
        "obj": "subscribe.real_decorator.wrapper", 
        "column": 8, 
        "path": "test_project/test_project.py", 
        "line": 119, 
        "message-id": "C0111", 
        "type": "convention", 
        "symbol": "missing-docstring", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Unused import thread", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 2, 
        "message-id": "W0611", 
        "type": "warning", 
        "symbol": "unused-import", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Unused import sys", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 4, 
        "message-id": "W0611", 
        "type": "warning", 
        "symbol": "unused-import", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Unused import time", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 4, 
        "message-id": "W0611", 
        "type": "warning", 
        "symbol": "unused-import", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Unused Pool imported from multiprocessing.dummy as ThreadPool", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 7, 
        "message-id": "W0611", 
        "type": "warning", 
        "symbol": "unused-import", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Unused import os", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 9, 
        "message-id": "W0611", 
        "type": "warning", 
        "symbol": "unused-import", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "standard import \"import thread\" should be placed before \"from Singleton import *\"", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 2, 
        "message-id": "C0411", 
        "type": "convention", 
        "symbol": "wrong-import-order", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "standard import \"import threading\" should be placed before \"from Singleton import *\"", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 3, 
        "message-id": "C0411", 
        "type": "convention", 
        "symbol": "wrong-import-order", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "standard import \"import time, sys\" should be placed before \"from Singleton import *\"", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 4, 
        "message-id": "C0411", 
        "type": "convention", 
        "symbol": "wrong-import-order", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "standard import \"import time, sys\" should be placed before \"from Singleton import *\"", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 4, 
        "message-id": "C0411", 
        "type": "convention", 
        "symbol": "wrong-import-order", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "standard import \"from Queue import Queue\" should be placed before \"from Singleton import *\"", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 5, 
        "message-id": "C0411", 
        "type": "convention", 
        "symbol": "wrong-import-order", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "standard import \"from threading import Thread\" should be placed before \"from Singleton import *\"", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 6, 
        "message-id": "C0411", 
        "type": "convention", 
        "symbol": "wrong-import-order", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "standard import \"from multiprocessing.dummy import Pool as ThreadPool\" should be placed before \"from Singleton import *\"", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 7, 
        "message-id": "C0411", 
        "type": "convention", 
        "symbol": "wrong-import-order", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "standard import \"import multiprocessing\" should be placed before \"from Singleton import *\"", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 8, 
        "message-id": "C0411", 
        "type": "convention", 
        "symbol": "wrong-import-order", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "standard import \"import gevent, os\" should be placed before \"from Singleton import *\"", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 9, 
        "message-id": "C0411", 
        "type": "convention", 
        "symbol": "wrong-import-order", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Imports from package threading are not grouped", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 6, 
        "message-id": "C0412", 
        "type": "convention", 
        "symbol": "ungrouped-imports", 
        "module": "test_project.test_project"
    }, 
    {
        "message": "Imports from package test_project are not grouped", 
        "obj": "", 
        "column": 0, 
        "path": "test_project/test_project.py", 
        "line": 114, 
        "message-id": "C0412", 
        "type": "convention", 
        "symbol": "ungrouped-imports", 
        "module": "test_project.test_project"
    }
]
